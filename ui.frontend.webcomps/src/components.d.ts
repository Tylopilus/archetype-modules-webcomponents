/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyInput {
    }
    interface MyTictactoe {
    }
    interface SharedButton {
        "name": string;
    }
    interface SharedImage {
    }
    interface SharedItem {
        "item": any;
    }
    interface SharedModal {
    }
    interface TeaserComp {
        "text": string;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyInputElement extends Components.MyInput, HTMLStencilElement {
    }
    var HTMLMyInputElement: {
        prototype: HTMLMyInputElement;
        new (): HTMLMyInputElement;
    };
    interface HTMLMyTictactoeElement extends Components.MyTictactoe, HTMLStencilElement {
    }
    var HTMLMyTictactoeElement: {
        prototype: HTMLMyTictactoeElement;
        new (): HTMLMyTictactoeElement;
    };
    interface HTMLSharedButtonElement extends Components.SharedButton, HTMLStencilElement {
    }
    var HTMLSharedButtonElement: {
        prototype: HTMLSharedButtonElement;
        new (): HTMLSharedButtonElement;
    };
    interface HTMLSharedImageElement extends Components.SharedImage, HTMLStencilElement {
    }
    var HTMLSharedImageElement: {
        prototype: HTMLSharedImageElement;
        new (): HTMLSharedImageElement;
    };
    interface HTMLSharedItemElement extends Components.SharedItem, HTMLStencilElement {
    }
    var HTMLSharedItemElement: {
        prototype: HTMLSharedItemElement;
        new (): HTMLSharedItemElement;
    };
    interface HTMLSharedModalElement extends Components.SharedModal, HTMLStencilElement {
    }
    var HTMLSharedModalElement: {
        prototype: HTMLSharedModalElement;
        new (): HTMLSharedModalElement;
    };
    interface HTMLTeaserCompElement extends Components.TeaserComp, HTMLStencilElement {
    }
    var HTMLTeaserCompElement: {
        prototype: HTMLTeaserCompElement;
        new (): HTMLTeaserCompElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "my-input": HTMLMyInputElement;
        "my-tictactoe": HTMLMyTictactoeElement;
        "shared-button": HTMLSharedButtonElement;
        "shared-image": HTMLSharedImageElement;
        "shared-item": HTMLSharedItemElement;
        "shared-modal": HTMLSharedModalElement;
        "teaser-comp": HTMLTeaserCompElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyInput {
    }
    interface MyTictactoe {
    }
    interface SharedButton {
        "name"?: string;
    }
    interface SharedImage {
        "onSharedEvent"?: (event: CustomEvent<string>) => void;
    }
    interface SharedItem {
        "item"?: any;
    }
    interface SharedModal {
    }
    interface TeaserComp {
        "text"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "my-input": MyInput;
        "my-tictactoe": MyTictactoe;
        "shared-button": SharedButton;
        "shared-image": SharedImage;
        "shared-item": SharedItem;
        "shared-modal": SharedModal;
        "teaser-comp": TeaserComp;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-input": LocalJSX.MyInput & JSXBase.HTMLAttributes<HTMLMyInputElement>;
            "my-tictactoe": LocalJSX.MyTictactoe & JSXBase.HTMLAttributes<HTMLMyTictactoeElement>;
            "shared-button": LocalJSX.SharedButton & JSXBase.HTMLAttributes<HTMLSharedButtonElement>;
            "shared-image": LocalJSX.SharedImage & JSXBase.HTMLAttributes<HTMLSharedImageElement>;
            "shared-item": LocalJSX.SharedItem & JSXBase.HTMLAttributes<HTMLSharedItemElement>;
            "shared-modal": LocalJSX.SharedModal & JSXBase.HTMLAttributes<HTMLSharedModalElement>;
            "teaser-comp": LocalJSX.TeaserComp & JSXBase.HTMLAttributes<HTMLTeaserCompElement>;
        }
    }
}
